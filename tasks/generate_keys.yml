- block:
  - name: generate_keys | file > create ssh key generation directory
    file:
      path:  "{{ item.path | dirname }}"
      state: directory
      owner: "{{ item.owner }}"
      group: "{{ item.group | default(omit) }}"
      mode:  "0700"
    with_items: "{{ ssh_keys_generate_keys }}"
    when: ssh_keys_generate_keys | length

  # KO
  # - name: generate | shell > generate private ssh key
  #   shell: >
  #     {{ ssh_keys_generate_keys_command | default(_ssh_keys_generate_keys_command) }}
  #   with_items: "{{ ssh_keys_generate_keys }}"
  #   when: >-
  #     item.force | default(false) | bool or
  #     item.path is not file
  #   tags: ssh_generate_private_keys

  # - name: generate | openssl_publickey > generate public ssh key
  #   openssl_publickey:
  #     path:   "{{ item.path }}.pub"
  #     force:  "{{ item.force | default(false) }}"
  #     format: "{{ item.format | default('OpenSSH') }}"
  #     owner:  "{{ item.owner }}"
  #     group:  "{{ item.group | default(omit) }}"
  #     mode:   "{{ item.mode | default('0600') }}"
  #     privatekey_passphrase: "{{ item.passphrase | default(omit) }}"
  #     privatekey_path: "{{ item.path }}"
  #   with_items: "{{ ssh_keys_generate_keys }}"
  #   tags: ssh_generate_public_keys

  # - name: generate | file > set permissions on keys
  #   file:
  #     path:  "{{ item.path }}"
  #     owner: "{{ item.owner }}"
  #     group: "{{ item.group | default(omit) }}"
  #     mode:  "{{ item.mode | default('0600') }}"
  #   with_items: "{{ ssh_keys_generate_keys }}"
  #   tags: ssh_set_keys_permissions

  - name: generate_keys | openssh_keypair > create private & public keys
    openssh_keypair:
      path: "{{ item.path }}"
      type: "{{ item.type | default('ed25519') }}"
      size: "{{ item.size | default(omit) }}"
      passphrase: "{{ item.passwd | default(omit) }}"
      comment: "{{ item.comment | default(omit) }}"
      owner: "{{ item.owner }}"
      group: "{{ item.group | default(omit) }}"
      mode:  "{{ item.mode | default('0600')}}"
      regenerate: full_idempotence
    with_items: "{{ ssh_keys_generate_keys }}"
    when: ssh_keys_generate_keys | length

  when: ansible_play_name != "chroot"
  # delegate_to: localhost                       ## needs --ask-become-pass when running a PB in localhost with this delegate_to
  # become: "{{ ssh_keys_generate_keys_become }}"
  tags: ssh_generate_keys
