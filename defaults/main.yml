ssh_user: []                  # to generate ~/.ssh dir and ~/.ssh/config client based on the 'owner' key
#   - owner: luke             # [required]
#     group: wheel

ssh_keys_generate_keys: []    # keys to generate locally
#   - path:                   # [required] The local path where the key should be generated
#     cipher:                 # [default: none] The cipher to encrypt the private key
#     format:                 # [default: OpenSSH]: The format of the public key
#     force:                  # [default: false] Whether to regenerate the key pair if it already exists
#     owner:                  # [required] The name of the user that should own the key pair
#     group:                  # [default: owner] The name of the group that should own the key pair
#     mode:                   # [default: 0600] The UNIX permission mode bits of the key pair
#     passphrase:             # [default: ''] The passphrase for the private key
#     size:                   # [default: 4096] Size in bits of the TLS/SSL key to generate
#     type:                   # [default: RSA] The algorithm used to generate the private key

# ssh_keys_generate_keys_command: []  # [default: _ssh_keys_generate_keys_command]:
# ssh_keys_generate_keys_become: []   # [default: false]: Whether or not to use sudo when generating ssh keys (locally)

ssh_keys_private_keys: []
#   - owner:                  # [required] The name of the user that should own the file
#     group:                  # [default: owner] The name of the group that should own the file
#     mode:                   # [default: 0600]: The UNIX permission mode bits of the file
#     src:                    # [required] The local path of the key
#     dest:                   # [default: id_rsa] The remote path of the key (relative to home/.ssh/)   ## has been removed
#     dest_absolute:          # [optional] The remote path of the key
#     dest_managed:           # [default: true] Whether or not the remote path of the key should be created
#     state:                  # [default: present]

ssh_keys_public_keys: []
#   - owner:                  # [required] The omite user that should own the file
#     group:                  # [default: owner] The name of the group that should own the file
#     mode:                   # [default: 0644] The UNIX permission mode bits of the file
#     src:                    # [required] The local path of the key
#     dest:                   # [default: id_rsa.pub] The remote path of the key (relative to home/.ssh/)   ## has been removed
#     dest_absolute:          # [optional] The remote path of the key
#     dest_managed:           # [default: true] Whether or not the remote path of the key should be created
#     state:                  # [default: present]

ssh_keys_authorized_keys: []
#   - owner:                    # [required] The name of the user that should own the file
#     src:                      # [required] The local path of the key
#     state:                    # [default: present] State
#     path:                     # [default: authorized_keys] Authorized keys file (absolute path, default to ~/.ssh/authorized_keys)

ssh_keys_known_hosts: []
#   - hostname:                 # [required] The hostname/domain name
#     enctype:                  # [required] The type of the fingerprint: ssh-rsa, ssh-ed25519
#     fingerprint:              # [required] The actual fingerprint: 'AAAAB3Nza...AaQ=='
#     path:                     # absolute path of ~/known_hosts

ssh_client_config: []
#   - host:  desktop-x370
#     owner: luke
#     group: wheel
#     user:  luke
#     private_key: desktop-x370
#     port: 6189                        # [default: 22]
#     roaming: "no"                     # [default: no]
#     password_authentification: "no"   # [default: no] allow only pub key

public_keys: []             # transfert ssh public on the target host
# - key1
# - key2

sshd_hardening: true        # hardening server
ssh_hardening:  true        # herdening client
sshd_enable:    true        # toggle service sshd
openssh_keys:   true        # Enable public keys transfert

### OPENSSH-SERVER ###
sshd_port: 22                           # define listening sshd port
sshd_listen_address:                    # listening on specific address
  - 0.0.0.0
  # - "::"                              # IPv6 example
sshd_protocol_version:  2               # use only ssh protocol version 2
sshd_pubkey_authentication: "yes"
sshd_host_key_files:    []              # check host key when sshd start
sshd_syslog_facility:   AUTHPRIV
sshd_log_level:         VERBOSE
sshd_privilege_separation_59: sandbox   # use  privilege separation
sshd_privilege_separation_53: "yes"
sshd_login_grace_time:  30s
sshd_root_login:        "no"
sshd_strict_mode:       "yes"
sshd_ignore_rhosts:     "yes"
ssh_ignore_user_known_hosts:    "yes"
sshd_hostbased_authentication:  "no"
sshd_challenge_response_auth:   "no"
sshd_password_authentification: "no"
sshd_pam:               "yes"           # use pam authentification
sshd_empty_passwords:   "no"
sshd_max_auth_tries:    5               # Limit max connexion non-authentified concurency and max try
sshd_max_startups:      "10:30:100"
sshd_kerberos_support:  false
sshd_gssapi_support:    false           # gssapi authentification
sshd_x11_forwarding:    "no"
sshd_print_motd:        "no"
sshd_print_last_log:    "yes"
sshd_tcp_keep_alive:    "no"
sshd_print_banner:      "yes"
sshd_banner_path:       /etc/banner  # created when a banner msg is defined. To use it enable sshd_print_banner
sshd_banner_msg:        []
#   ----------------------------- -- WARNING -- -----------------------------
#   -- This system is for the use of authorized users only. Individuals    --
#   -- using this computer system without authority or in excess of their  --
#   -- authority are subject to having all their activities on this system --
#   -- monitored and recorded by system personnel. Anyone using this       --
#   -- system expressly consents to such monitoring and is advised that    --
#   -- if such monitoring reveals possible evidence of criminal activity   --
#   -- system personal may provide the evidence of such monitoring to law  --
#   -- enforcement officials.                                              --
sshd_accept_env:              "LANG LC_*"  # Allow client to pass locale environment variables
sshd_agent_forwarding:        "no"
sshd_tcp_forwarding:          "no"
sshd_client_alive_intervale:  300   # time in second before disconnect from idle sessions
sshd_client_alive_countMax:   2


## UNUSED ##
sshd_gss_api_authentication:  "no"
sshd_allowed_users:           []    # Space separated list of users that may login - Read the README on how to use this!
sshd_allowed_groups:          []    # Space separated list of groups that may login - Read the README on how to use this!
sshd_ciphers:                 []
sshd_enabled_ciphers:         []
sshd_disabled_ciphers:        []
# Misc
sshd_usedns:                  "no"
# Hashicorp Vault Settings
sshd_vault_trusted_ca_enable: "no"
sshd_vault_server:            "https://127.0.0.1:8200"
sshd_vault_ca_cert:           trusted-user-ca-keys.pem

sshd_address_family:          any     ## inet or any ?
sshd_hostKey:                 /etc/ssh/ssh_host_ed25519_key
sshd_PermitRootLogin:         "no"
sshd_StrictModes:             "yes"
sshd_MaxSessions:             5
sshd_AuthorizedKeysFile:      ".ssh/authorized_keys .ssh/authorized_keys2"
sshd_HostbasedAuthentication: "no"
sshd_ChallengeResponseAuthentication: "no"  # Change to no to disable s/key passwords
sshd_AllowAgentForwarding:    "no"
sshd_AllowTcpForwarding:      "no"
sshd_GatewayPorts:            "no"
sshd_PermitTTY:               "yes"
sshd_PermitUserEnvironment:   "no"
#PermitUserEnvironment        "no"
#Compression delayed
#ClientAliveInterval          0
#ClientAliveCountMax          3
#ShowPatchLevel "no"
sshd_PidFile:                 "/var/run/sshd.pid"
sshd_MaxStartups:             "10:30:100"
sshd_PermitTunnel:            "no"
#ChrootDirectory              "none"
sshd_VersionAddendum:         "none"
sshd_Subsystem:               "sftp /usr/libexec/openssh/sftp-server"      # override default of "no" subsystems
## END UNUSED ##


### OPENSSH-CLIENT ###
## SUPPRIMER POUR METTRE EN default(value)
ssh_keys_sshdir:               .ssh
ssh_keys_private_key_filename: id_rsa
ssh_keys_public_key_filename:  id_rsa.pub
ssh_keys_known_hosts_path:     /etc/ssh/ssh_known_hosts ## A SUPPRIMER

### CRYPTOGRAPHY ###
openssh_ciphers: []
openssh_macs: []
openssh_kexalgorithms: []

# cipher do not use sha1
ciphers_openssh_66:
  - chacha20-poly1305@openssh.com
  - aes256-gcm@openssh.com
  - aes128-gcm@openssh.com
  - aes256-ctr
  - aes192-ctr
  - aes128-ctr
ciphers_openssh_53:
  - aes256-ctr
  - aes192-ctr
  - aes128-ctr

# Message authentication code
macs_openssh_76:
  - hmac-sha2-512-etm@openssh.com
  - hmac-sha2-256-etm@openssh.com
  - umac-128-etm@openssh.com
  - hmac-sha2-512
  - hmac-sha2-256

macs_openssh_66:
  - hmac-sha2-512-etm@openssh.com
  - hmac-sha2-256-etm@openssh.com
  - umac-128-etm@openssh.com
  - hmac-sha2-512
  - hmac-sha2-256

macs_openssh_59:
  - hmac-sha2-512
  - hmac-sha2-256

macs_openssh_53:
  - hmac-sha1

# Key exchange algorithms
kexalgorithms_openssh_66:
  - curve25519-sha256@libssh.org
  - diffie-hellman-group-exchange-sha256
kexalgorithms_openssh_53:
  - diffie-hellman-group-exchange-sha256

ssh_host_key_algorithms:                  # host key algorithms
  - ssh-ed25519-cert-v01@openssh.com
  - ssh-rsa-cert-v01@openssh.com
  - ssh-ed25519
  - ssh-rsa
